$date
	Fri Dec  7 17:00:33 2018
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module srl $end
$var wire 8 ! shift [7:0] $end
$var wire 8 " src [7:0] $end
$var reg 8 # by1 [7:0] $end
$var reg 8 $ by2 [7:0] $end
$var reg 8 % by4 [7:0] $end
$var reg 8 & dst [7:0] $end
$upscope $end
$scope module testbench $end
$var wire 16 ' result [15:0] $end
$var wire 1 ( done $end
$var reg 1 ) clk $end
$var reg 1 * en $end
$var reg 5 + instr [4:0] $end
$var reg 16 , rd [15:0] $end
$var reg 16 - rn [15:0] $end
$var integer 32 . counter [31:0] $end
$scope module myfpu $end
$var wire 1 ) clk $end
$var wire 1 * en $end
$var wire 5 / instr [4:0] $end
$var wire 16 0 op1 [15:0] $end
$var wire 16 1 op2 [15:0] $end
$var wire 5 2 d [4:0] $end
$var reg 1 ( done $end
$var reg 8 3 exp [7:0] $end
$var reg 8 4 exp_p1 [7:0] $end
$var reg 7 5 frac [6:0] $end
$var reg 16 6 int [15:0] $end
$var reg 16 7 result [15:0] $end
$var reg 1 8 sign $end
$var integer 32 9 state [31:0] $end
$var integer 32 : tmp [31:0] $end
$scope module lead0 $end
$var wire 16 ; s [15:0] $end
$var reg 5 < d [4:0] $end
$var reg 2 = s2 [1:0] $end
$var reg 4 > s4 [3:0] $end
$var reg 8 ? s8 [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
bx ?
bx >
bx =
bx <
bx ;
bx :
b110010 9
x8
bx 7
bx 6
bx 5
bx 4
bx 3
bx 2
b11101111111111 1
b100100011000011 0
b10101 /
b0 .
b11101111111111 -
b100100011000011 ,
b10101 +
x*
0)
0(
bx '
bx &
bxz %
bxzzzzz $
bxzzzzzzz #
bz "
bz !
$end
#4
1*
#9
b110111 9
b0 5
b10000110 3
08
1)
#14
b1 .
0)
#19
1(
b100001100000000 '
b100001100000000 7
1)
#24
b10 .
0)
#29
1)
#34
b11 .
0)
#39
1)
#44
b100 .
0)
#49
1)
#54
b101 .
0)
