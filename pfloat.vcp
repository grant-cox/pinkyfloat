$date
	Wed Dec  5 19:37:11 2018
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module testbench $end
$scope module myfpu $end
$var wire 1 ! clk $end
$var wire 1 " en $end
$var wire 5 # instr [4:0] $end
$var wire 16 $ op1 [15:0] $end
$var wire 16 % op2 [15:0] $end
$var wire 5 & d [4:0] $end
$var reg 1 ' done $end
$var reg 8 ( exp [7:0] $end
$var reg 16 ) int [15:0] $end
$var reg 16 * result [15:0] $end
$var reg 1 + sign $end
$var integer 32 , state [31:0] $end
$var integer 32 - tmp [31:0] $end
$scope module lead0 $end
$var wire 16 . s [15:0] $end
$var reg 5 / d [4:0] $end
$var reg 2 0 s2 [1:0] $end
$var reg 4 1 s4 [3:0] $end
$var reg 8 2 s8 [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
bx 2
bx 1
bx 0
bx /
bx .
bx -
b110010 ,
x+
bx *
bx )
bx (
0'
bx &
b1100010011011111 %
b0 $
b10010 #
x"
0!
$end
#4
1"
#9
b110101 ,
b11011111000 *
1!
#14
0!
#19
1'
b1111100100001000 *
b110010 ,
1!
#24
0!
#29
b110101 ,
b11011111000 *
0'
1!
#34
0!
#39
1'
b1111100100001000 *
b110010 ,
1!
#44
0!
#49
b110101 ,
b11011111000 *
0'
1!
#54
0!
